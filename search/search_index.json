{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction ARRYSA - is the content management system that adapts to any project. Made for developers, designers, creators and clients.","title":"Introduction"},{"location":"#introduction","text":"ARRYSA - is the content management system that adapts to any project. Made for developers, designers, creators and clients.","title":"Introduction"},{"location":"sections/back/api-endpoints/","text":"Endpoints Admin Panel Method HTTP requests Description Authorization required POST api/admin/login Authorization No GET api/admin/user/:id Get user by id Yes Authorization: POST | /api/admin/login body request: { \"username\" : \"toby\" , \"password\" : \"password\" } Successful response: \ud83d\udc4c { \"user\" : { \"id\" : 1 , \"email\" : \"admin@aryssa.com\" , \"username\" : \"admin\" , \"bio\" : \"\" , \"image\" : \"\" , \"name\" : \"\" , \"roleId\" : 1 , \"isLocked\" : false , \"created_at\" : \"2022-12-20T23:10:36.475Z\" , \"updated_at\" : \"2022-12-20T23:10:36.475Z\" , \"token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI....\" } } Failure response: \ud83d\udea7 { \"statusCode\" : 401 , \"message\" : \"Unauthorized\" } Get current user GET | /api/admin/user Authorization required (bearer token jwt) Successful response: \ud83d\udc4c { \"user\" : { \"id\" : 1 , \"email\" : \"admin@aryssa.com\" , \"username\" : \"admin\" , \"bio\" : \"\" , \"image\" : \"\" , \"name\" : \"\" , \"roleId\" : 1 , \"isLocked\" : false , \"created_at\" : \"2022-12-20T23:10:36.475Z\" , \"updated_at\" : \"2022-12-20T23:10:36.475Z\" } } Failure response: \ud83d\udea7 if token not valid { \"statusCode\" : 401 , \"message\" : \"Unauthorized\" } Get user by id GET | /api/admin/user/:id Authorization required (bearer token jwt) Successful response: \ud83d\udc4c { \"user\" : { \"id\" : 4 , \"email\" : \"toby@gmail.com\" , \"username\" : \"toby\" , \"bio\" : \"\" , \"image\" : \"\" , \"name\" : \"\" , \"roleId\" : 3 , \"isLocked\" : false , \"created_at\" : \"2022-12-20T23:10:36.475Z\" , \"updated_at\" : \"2022-12-20T23:10:36.475Z\" } } Failure response: \ud83d\udea7 if token not valid { \"statusCode\" : 401 , \"message\" : \"Unauthorized\" } Get user list GET | /api/admin/user/list Authorization required (bearer token jwt) Successful response: \ud83d\udc4c { \"users\" : [ { \"id\" : 1 , \"email\" : \"admin@aryssa.com\" , \"username\" : \"admin\" , \"bio\" : \"\" , \"image\" : \"\" , \"name\" : \"\" , \"roleId\" : 1 , \"isLocked\" : false , \"created_at\" : \"2022-12-20T23:10:36.475Z\" , \"updated_at\" : \"2022-12-20T23:10:36.475Z\" }, { \"id\" : 2 , \"email\" : \"admin2@aryssa.com\" , \"username\" : \"admin2\" , \"bio\" : \"\" , \"image\" : \"\" , \"name\" : \"\" , \"roleId\" : 1 , \"isLocked\" : false , \"created_at\" : \"2022-12-20T23:10:36.477Z\" , \"updated_at\" : \"2022-12-20T23:10:36.477Z\" } ] } Failure response: \ud83d\udea7 if token not valid { \"statusCode\" : 401 , \"message\" : \"Unauthorized\" } Update user by id PATCH | /api/admin/user/:id Authorization required (bearer token jwt) users with roleId: 1 can edit everyone users with roleId: 2 or roleId: 3 can only edit themselves roleId description 1 admin 2 editor 3 user body request: all fields are optional { \"email\" : \"toby@gmail.com\" , \"username\" : \"admin\" , \"bio\" : \"some text here\" , \"image\" : \"any.png\" , \"name\" : \"alex\" , \"roleId\" : 1 , /* can change only admin (roleId: 1) */ \"isLocked\" : false , /* can change only admin (roleId: 1) */ } Successful response: \ud83d\udc4c { \"user\" : { \"id\" : 4 , \"email\" : \"toby@gmail.com\" , \"username\" : \"toby\" , \"bio\" : \"some text here\" , \"image\" : \"any.png\" , \"name\" : \"alex\" , \"roleId\" : 1 , \"isLocked\" : false , \"created_at\" : \"2022-12-20T23:10:36.475Z\" , \"updated_at\" : \"2022-12-20T23:10:36.475Z\" } } Failure response: \ud83d\udea7 if token not valid { \"statusCode\" : 401 , \"message\" : \"Unauthorized\" } Failure response: \ud83d\udea7 if the field from the query body is not unique. For example the username and email fields must be unique in the database { \"statusCode\" : 422 , \"message\" : \"Unprocessable entity\" }","title":"Endpoints"},{"location":"sections/back/api-endpoints/#endpoints-admin-panel","text":"","title":"Endpoints Admin Panel"},{"location":"sections/back/api-endpoints/#_1","text":"Method HTTP requests Description Authorization required POST api/admin/login Authorization No GET api/admin/user/:id Get user by id Yes","title":""},{"location":"sections/back/api-endpoints/#authorization","text":"POST | /api/admin/login body request: { \"username\" : \"toby\" , \"password\" : \"password\" } Successful response: \ud83d\udc4c { \"user\" : { \"id\" : 1 , \"email\" : \"admin@aryssa.com\" , \"username\" : \"admin\" , \"bio\" : \"\" , \"image\" : \"\" , \"name\" : \"\" , \"roleId\" : 1 , \"isLocked\" : false , \"created_at\" : \"2022-12-20T23:10:36.475Z\" , \"updated_at\" : \"2022-12-20T23:10:36.475Z\" , \"token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI....\" } } Failure response: \ud83d\udea7 { \"statusCode\" : 401 , \"message\" : \"Unauthorized\" }","title":"Authorization:"},{"location":"sections/back/api-endpoints/#get-current-user","text":"GET | /api/admin/user Authorization required (bearer token jwt) Successful response: \ud83d\udc4c { \"user\" : { \"id\" : 1 , \"email\" : \"admin@aryssa.com\" , \"username\" : \"admin\" , \"bio\" : \"\" , \"image\" : \"\" , \"name\" : \"\" , \"roleId\" : 1 , \"isLocked\" : false , \"created_at\" : \"2022-12-20T23:10:36.475Z\" , \"updated_at\" : \"2022-12-20T23:10:36.475Z\" } } Failure response: \ud83d\udea7 if token not valid { \"statusCode\" : 401 , \"message\" : \"Unauthorized\" }","title":"Get current user"},{"location":"sections/back/api-endpoints/#get-user-by-id","text":"GET | /api/admin/user/:id Authorization required (bearer token jwt) Successful response: \ud83d\udc4c { \"user\" : { \"id\" : 4 , \"email\" : \"toby@gmail.com\" , \"username\" : \"toby\" , \"bio\" : \"\" , \"image\" : \"\" , \"name\" : \"\" , \"roleId\" : 3 , \"isLocked\" : false , \"created_at\" : \"2022-12-20T23:10:36.475Z\" , \"updated_at\" : \"2022-12-20T23:10:36.475Z\" } } Failure response: \ud83d\udea7 if token not valid { \"statusCode\" : 401 , \"message\" : \"Unauthorized\" }","title":"Get user by id"},{"location":"sections/back/api-endpoints/#get-user-list","text":"GET | /api/admin/user/list Authorization required (bearer token jwt) Successful response: \ud83d\udc4c { \"users\" : [ { \"id\" : 1 , \"email\" : \"admin@aryssa.com\" , \"username\" : \"admin\" , \"bio\" : \"\" , \"image\" : \"\" , \"name\" : \"\" , \"roleId\" : 1 , \"isLocked\" : false , \"created_at\" : \"2022-12-20T23:10:36.475Z\" , \"updated_at\" : \"2022-12-20T23:10:36.475Z\" }, { \"id\" : 2 , \"email\" : \"admin2@aryssa.com\" , \"username\" : \"admin2\" , \"bio\" : \"\" , \"image\" : \"\" , \"name\" : \"\" , \"roleId\" : 1 , \"isLocked\" : false , \"created_at\" : \"2022-12-20T23:10:36.477Z\" , \"updated_at\" : \"2022-12-20T23:10:36.477Z\" } ] } Failure response: \ud83d\udea7 if token not valid { \"statusCode\" : 401 , \"message\" : \"Unauthorized\" }","title":"Get user list"},{"location":"sections/back/api-endpoints/#update-user-by-id","text":"PATCH | /api/admin/user/:id Authorization required (bearer token jwt) users with roleId: 1 can edit everyone users with roleId: 2 or roleId: 3 can only edit themselves","title":"Update user by id"},{"location":"sections/back/api-endpoints/#_2","text":"roleId description 1 admin 2 editor 3 user body request: all fields are optional { \"email\" : \"toby@gmail.com\" , \"username\" : \"admin\" , \"bio\" : \"some text here\" , \"image\" : \"any.png\" , \"name\" : \"alex\" , \"roleId\" : 1 , /* can change only admin (roleId: 1) */ \"isLocked\" : false , /* can change only admin (roleId: 1) */ } Successful response: \ud83d\udc4c { \"user\" : { \"id\" : 4 , \"email\" : \"toby@gmail.com\" , \"username\" : \"toby\" , \"bio\" : \"some text here\" , \"image\" : \"any.png\" , \"name\" : \"alex\" , \"roleId\" : 1 , \"isLocked\" : false , \"created_at\" : \"2022-12-20T23:10:36.475Z\" , \"updated_at\" : \"2022-12-20T23:10:36.475Z\" } } Failure response: \ud83d\udea7 if token not valid { \"statusCode\" : 401 , \"message\" : \"Unauthorized\" } Failure response: \ud83d\udea7 if the field from the query body is not unique. For example the username and email fields must be unique in the database { \"statusCode\" : 422 , \"message\" : \"Unprocessable entity\" }","title":""},{"location":"sections/info/documentation/","text":"How to edit documentation Note To edit the documentation, you need to install Material for MkDocs How to run documentation locally clone a repo: git clone https://github.com/chas523/chas523.github.io.git install all dependencies with pip pip install mkdocs-material run the server mkdocs serve How to save changes To save the changes, it is enough to commit the files and push to the repository. The repository has piplines that will automatically build the project.","title":"How to edit documentation"},{"location":"sections/info/documentation/#how-to-edit-documentation","text":"Note To edit the documentation, you need to install Material for MkDocs","title":"How to edit documentation"},{"location":"sections/info/documentation/#how-to-run-documentation-locally","text":"clone a repo: git clone https://github.com/chas523/chas523.github.io.git install all dependencies with pip pip install mkdocs-material run the server mkdocs serve","title":"How to run documentation locally"},{"location":"sections/info/documentation/#how-to-save-changes","text":"To save the changes, it is enough to commit the files and push to the repository. The repository has piplines that will automatically build the project.","title":"How to save changes"}]}